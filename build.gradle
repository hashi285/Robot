plugins {
    id 'java'
    id 'org.springframework.boot' version '3.3.3'
    id 'io.spring.dependency-management' version '1.1.6'
}

group = 'org.example'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        // JDK 17로 변경
        languageVersion = JavaLanguageVersion.of(17)
    }
}

repositories {
    mavenCentral()
    maven { url 'https://jitpack.io' } // JitPack 추가
}

dependencies {
    // Spring Boot Starter dependencies
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'org.springframework.boot:spring-boot-starter-web'

    // Selenium dependencies
    implementation 'org.seleniumhq.selenium:selenium-java:4.19.1'
    implementation 'org.seleniumhq.selenium:selenium-chrome-driver:4.19.1'

    // Development dependencies
    developmentOnly 'org.springframework.boot:spring-boot-devtools'

    // Testing dependencies
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    /* lombok */
    annotationProcessor 'org.projectlombok:lombok'
    compileOnly 'org.projectlombok:lombok'

    // Swagger UI
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.2.0'

    // Sikulix API with SLF4J NOP excluded
    implementation('com.sikulix:sikulixapi:2.0.5') {
        exclude group: 'org.slf4j', module: 'slf4j-nop'
    }

    // Tess4J
    implementation 'net.sourceforge.tess4j:tess4j:4.5.4'

    // OpenCV JAR 파일 추가
    implementation files('C:/Users/m5118/IdeaProjects/Robot/opencv/build/java/opencv-4100.jar')
}

// OpenCV 네이티브 라이브러리 경로 설정
tasks.withType(JavaExec) {
    jvmArgs = ['-Djava.library.path=C:/Users/m5118/IdeaProjects/Robot/opencv/build/java/x64']
}
tasks.named('test') {
    useJUnitPlatform()
}
